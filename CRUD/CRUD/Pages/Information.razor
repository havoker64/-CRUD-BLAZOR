@page "/Information/{id}"

@using CRUD.Models;
@inject NavigationManager NavigationManager;
@inject CRUD.Services.IEmpresaSVC EmpresaSVC;

<h1>Informações</h1>

<!--quando o formulário for válido, chamamos a task-->
<EditForm Model="empresa" OnValidSubmit="OnInitializedAsync">
    <div class="form-group mb-3">
        <label for="nomeEmpresa"> Nome </label>
        <InputText @bind-Value="empresa.nome" class="form-control" id="nomeEmpresa" disabled=""/>
    </div>
    <div class="form-group mb-3">
        <label for="siteEmrpesa"> Site </label>
        <InputText @bind-Value="empresa.site" class="form-control" id="siteEmpresa" disabled="" />
    </div>
    <div class="form-group mb-3">
        <label for="seguimentoEmpresa"> Seguimento </label>
        <InputText @bind-Value="empresa.seguimento" class="form-control" id="seguimentoEmpresa" disabled="" />
    </div>


    <a href="/" class="btn btn-success"> Voltar </a>

</EditForm>

@code {
    Empresa empresa = new();

    [Parameter] public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        empresa = await EmpresaSVC.GetBy(Guid.Parse(id));
    }

}